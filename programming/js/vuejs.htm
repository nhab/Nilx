<html>
<head> 
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<link rel="stylesheet" href="/nilx/assets/css/blocks.css">	
	<script src='/nilx/assets/js/blocks.js'></script>
	<link rel="stylesheet" href="/nilx/libs/highlight/androidstudio2.css">
    <script src="/nilx/libs/highlight/highlight.min.js"></script>
	<script>hljs.initHighlightingOnLoad()</script>
</head>
<body>
<button onclick="toggleAll(this);" >-</button>

<h2><input type="button" value="-"
			style="font-size:20px;margin-right:5px;vertical-align: middle;"  
			onclick="toggle(this)" />Helllo Vue Example:</h2>
<pre><code  class = 'hljs-javascript'>
    < script src="https://unpkg.com/vue@3">< /script>

    < div id="app">{{ message }}</div >

    < script >
    const { createApp } = Vue

    createApp({
        data() {
        return {
            message: 'Hello Vue!'
        }
        }
    }).mount('#app')
    < /script>
</code></pre>

The script section of the code can be written in ES6 modules syntax:
<pre><code>
    < script type="importmap">
        {
          "imports": {
            "vue": "https://unpkg.com/vue@3/dist/vue.esm-browser.js"
          }
        }
      < /script>
</code></pe>

<h2><input type="button" value="-"
			style="font-size:20px;margin-right:5px;vertical-align: middle;"  
			onclick="toggle(this)" />Binding</h2>
<pre><code>
 < div id="app">
    {{ message }}
    < /div>
    
    < script>
    var myObject = new Vue({
        el: '#app',
        data: {message: 'Hello Vue!'}
    })
    
    function myFunction() {
        myObject.message = "John Doe";
    }
    < /script>
</code></pre>

<h2><input type="button" value="-"
			style="font-size:20px;margin-right:5px;vertical-align: middle;"  
			onclick="toggle(this)" />Two-Way Binding</h2>

<pre><code>
    
< div id="app">
    < p>{{ message }}</p>
    < p><input v-model="message"></p>
  < /div>
  
  < script>
  var myObject = new Vue({
      el: '#app',
      data: {message: 'Hello Vue!'}
  })
  < /script>
  
</code></pre>

<h2><input type="button" value="-"
			style="font-size:20px;margin-right:5px;vertical-align: middle;"  
			onclick="toggle(this)" />Loop Binding</h2>
<div>
Using the v-for directive to bind an array of Vue objects to an "array" of HTML element:
<pre><code>
< div id="app">
    < ul>
      < li v-for="x in todos">
      {{ x.text }}
      < /li>
     < /ul>
   < /div>
   
   < script>
   myObject = new Vue({
       el: '#app',
       data: {
       todos: [
           { text: 'Learn JavaScript' },
           { text: 'Learn Vue.js' },
           { text: 'Build Something Awesome' }
           ]
       }
   })
   < /script>
</code></pre>
</div>
</body>
</html>

</body>