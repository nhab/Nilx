<html>
<head>
<meta charset='UTF-8' />
<meta name='viewport' content='width=device-width, initial-scale=1' />
<link rel='stylesheet' href='https://cdn.jsdelivr.net/gh/nhab/blocks@latest/blocks.css'>
<script src='https://cdn.jsdelivr.net/gh/nhab/blocks@latest/blocks.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js'></script>
<script src='https://code.jquery.com/jquery-3.6.3.min.js'></script>
</head>
<body onload='AddToggleButtonsToH(7);ReplaceLtGt();hljs.highlightAll();'>
 <button onclick="toggleAll(this);" >-</button>
	
<h2>References</h2>
<div>
<a href="https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29">summary</a>	
</div>
<h2 >Clean code manifesto</h2>
<div>
-Meaningful names ovr short names
-Meaningful code over clever code
-Using small functions or modules over big blocks of code
-Using a model class as parameter of a function over having long list of parameters for it;
-Using private fields and methods  over using publics.
-Using generics over repeating your code
-Avoid using null and nullable
-each part of code should be tracable seperately.
-least needed functionlity for classes over comprehensive classes
-Single responsibility of functions and classes over multipurpose functions and classes
-using local variables and parameters over global variables
-Using constants instead of magic numbers/magic strings
-Injecting depencies of ready made libraries and components over Inventing the wheel 
-Least coupling and maximum cohesion of classes.
-Using Aspect oriented exception handling(annotation driven e.g. @ExceptionTranslation or OnExceptionAspect ) surrounding an entire method vs put the method in a try...catch .

</div>
