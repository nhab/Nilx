<head>
<meta charset='UTF-8' />
<meta name='viewport' content='width=device-width, initial-scale=1' />
<link rel='stylesheet' href='https://cdn.jsdelivr.net/gh/nhab/blocks@latest/blocks.css'>
<script src='https://cdn.jsdelivr.net/gh/nhab/nhab@latest/assets/js/blocks.js'></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js'></script>
<script src='https://code.jquery.com/jquery-3.6.3.min.js'></script>
</head>
<body onload='AddToggleButtons();ReplaceLtGt();hljs.highlightAll();'>
 <button onclick="toggleAll(this);" >-</button>
	
        <h2>Thread</h2>
	<div>
        <b>Creating a thread</b>
        (Simultaneous tasks)
        <code>
            Thread t = new Thread (WriteY);          // Kick off a new thread
            t.Start();                               // running WriteY()
            
            // Simultaneously, do something on the main thread.
            for (int i = 0; i < 1000; i++) Console.Write ("x");
            
            void WriteY()
            {
              for (int i = 0; i < 1000; i++) Console.Write ("y");
            }
        </code>
	</div>
	
        <h2>Task</h2>
	<div>
        <b>Starting a Task</b>
        <code>            
                Task.Run (() => Console.WriteLine ("Foo"));
        </code>
        <b>task.wait</b>
        <code>
            Task task = Task.Run (() =>
            {
                Console.WriteLine ("Task started");
                Thread.Sleep (2000);
                Console.WriteLine ("Foo");
            });
            Console.WriteLine (task.IsCompleted);  // False
            task.Wait();  // Blocks until task is complete
        </code>
        <b>Returning a value</b>
        <code>
            Task<int> task = Task.Run (() => { Console.WriteLine ("Foo"); return 3; });

            int result = task.Result;      // Blocks if not already finished
            Console.WriteLine (result);    // 3
        </code>
        <b>ValueTask</b>
        <code>
            var vt1 = AnswerQuestionAsync ("What's the answer to life?");
            var vt2 = AnswerQuestionAsync ("Is the sun shining?");

            Console.WriteLine ($"vt1.IsCompleted: {vt1.IsCompleted}"); // True
            Console.WriteLine ($"vt2.IsCompleted: {vt2.IsCompleted}"); // False

            var a1 = await vt1;
            Console.WriteLine ($"a1: {a1}"); // Immediate

            var a2 = await vt2;
            Console.WriteLine ($"a2: {a2}"); // Takes 5 seconds to appear

            async ValueTask<string> AnswerQuestionAsync (string question)
            {
            if (question == "What's the answer to life?")
                return "42"; // ValueTask<string>
                
            return await AskCortanaAsync(question); // ValueTask<Task<string>>
            }

            async Task<string> AskCortanaAsync (string question)
            {
            await Task.Delay(5000);
            return "I don't know.";
            }
        </code>
    </div>
</body>
